{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhiro\\\\client-starter-code\\\\src\\\\components\\\\containers\\\\EditStudentContainer.js\";\n/* ===== /src/components/containers/EditStudentContainer.js ===== */\nimport Header from './Header';\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchStudentThunk, editStudentThunk } from '../../store/thunks';\nimport { EditStudentView } from '../views';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EditStudentContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let student = {\n        id: this.props.match.params.id,\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        imageUrl: this.state.imageUrl,\n        gpa: this.state.gpa,\n        campusId: this.state.campusId\n      };\n      await this.props.editStudent(student);\n      this.setState({\n        redirect: true,\n        redirectId: this.props.match.params.id\n      });\n    };\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      imageUrl: \"\",\n      gpa: null,\n      campusId: null,\n      redirect: false,\n      redirectId: null\n    };\n  }\n  componentDidMount() {\n    this.props.fetchStudent(this.props.match.params.id);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.student !== this.props.student) {\n      this.setState({\n        firstname: this.props.student.firstname,\n        lastname: this.props.student.lastname,\n        email: this.props.student.email,\n        imageUrl: this.props.student.imageUrl || \"\",\n        gpa: this.props.student.gpa || null,\n        campusId: this.props.student.campusId || null\n      });\n    }\n  }\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/student/${this.state.redirectId}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditStudentView, {\n        student: this.state,\n        handleChange: this.handleChange,\n        handleSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst mapState = state => {\n  return {\n    student: state.student\n  };\n};\nconst mapDispatch = dispatch => {\n  return {\n    fetchStudent: id => dispatch(fetchStudentThunk(id)),\n    editStudent: student => dispatch(editStudentThunk(student))\n  };\n};\nexport default withRouter(connect(mapState, mapDispatch)(EditStudentContainer));","map":{"version":3,"names":["Header","Component","connect","withRouter","fetchStudentThunk","editStudentThunk","EditStudentView","jsxDEV","_jsxDEV","EditStudentContainer","constructor","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","student","id","match","params","firstname","state","lastname","email","imageUrl","gpa","campusId","editStudent","redirect","redirectId","componentDidMount","fetchStudent","componentDidUpdate","prevProps","render","Redirect","to","fileName","_jsxFileName","lineNumber","columnNumber","children","mapState","mapDispatch","dispatch"],"sources":["C:/Users/zhiro/client-starter-code/src/components/containers/EditStudentContainer.js"],"sourcesContent":["/* ===== /src/components/containers/EditStudentContainer.js ===== */\r\nimport Header from './Header';\r\nimport { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { fetchStudentThunk, editStudentThunk } from '../../store/thunks';\r\nimport { EditStudentView } from '../views';\r\n\r\nclass EditStudentContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      imageUrl: \"\",\r\n      gpa: null,\r\n      campusId: null,\r\n      redirect: false,\r\n      redirectId: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStudent(this.props.match.params.id);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.student !== this.props.student) {\r\n      this.setState({\r\n        firstname: this.props.student.firstname,\r\n        lastname: this.props.student.lastname,\r\n        email: this.props.student.email,\r\n        imageUrl: this.props.student.imageUrl || \"\",\r\n        gpa: this.props.student.gpa || null,\r\n        campusId: this.props.student.campusId || null\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n    \r\n    let student = {\r\n      id: this.props.match.params.id,\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      email: this.state.email,\r\n      imageUrl: this.state.imageUrl,\r\n      gpa: this.state.gpa,\r\n      campusId: this.state.campusId\r\n    };\r\n    \r\n    await this.props.editStudent(student);\r\n\r\n    this.setState({\r\n      redirect: true,\r\n      redirectId: this.props.match.params.id\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={`/student/${this.state.redirectId}`} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <EditStudentView \r\n          student={this.state}\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    student: state.student,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    fetchStudent: (id) => dispatch(fetchStudentThunk(id)),\r\n    editStudent: (student) => dispatch(editStudentThunk(student)),\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapState, mapDispatch)(EditStudentContainer));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}